name: Publish NuGet Package

on:
  push:
    branches:
      - main
    paths:
      - 'src/**/*.csproj'
      - 'src/**/*.cs'
  workflow_dispatch: {}

env:
  BUILD_CONFIGURATION: Release
  PROJECT_TO_PACK_PATH: src/DevCracks.Fractalize.Infrastructure/DevCracks.Fractalize.Infrastructure.csproj
  SOLUTION_PATH: src/DevCracks.Fractalize.Framework.sln
  MAJOR_MINOR_VERSION: 1.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore Dependencies (Solution Level)
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build Solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

    - name: Pack NuGet Package
      run: dotnet pack ${{ env.PROJECT_TO_PACK_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --output nupkgs /p:Version=${{ env.MAJOR_MINOR_VERSION }}.${{ github.run_number }}

    - name: Upload NuGet Package (Artifact for Review)
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: nupkgs/*.nupkg

    - name: Publish NuGet Package to nuget.org
      if: success() && github.ref == 'refs/heads/main'
      run: dotnet nuget push nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ secrets.NUGET_PUSH_URL }} --skip-duplicate

    - name: Publish NuGet Package to MyGet
      if: success() && github.ref == 'refs/heads/main'
      run: dotnet nuget push nupkgs/*.nupkg --api-key ${{ secrets.MYGET_API_KEY }} --source ${{ secrets.MY_GET_PUSH_URL }} --skip-duplicate